# Generated by Django 3.1 on 2020-08-26 03:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('case', '0001_initial'),
        ('profile', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LevelList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(verbose_name='Уровень')),
                ('experience', models.IntegerField(verbose_name='Опыт')),
                ('reward', models.IntegerField(verbose_name='Вознаграждение')),
                ('additional_description', models.CharField(default='no_description', max_length=255, verbose_name='Дополнительное описание')),
            ],
            options={
                'verbose_name': 'Уровень',
                'verbose_name_plural': 'Уровни',
            },
        ),
        migrations.CreateModel(
            name='PrizeWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='User', max_length=50, verbose_name='Название')),
                ('weights', models.TextField(default='[1, 1, 1, 1, 1, 2, 2, 3, 3, 5, 5, 10]', verbose_name='Веса')),
            ],
            options={
                'verbose_name': 'Веса призов кейса',
                'verbose_name_plural': 'Веса призов кейсов',
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('value', models.IntegerField(default=0, verbose_name='Значение')),
            ],
            options={
                'verbose_name': 'Статистика',
                'verbose_name_plural': 'Статистика',
            },
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.userprofile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Событие пользователя',
                'verbose_name_plural': 'События пользователей',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название операции')),
                ('sum_money', models.IntegerField(verbose_name='Сумма')),
                ('status', models.CharField(max_length=255, verbose_name='Статус')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.userprofile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Финансовая операция',
                'verbose_name_plural': 'Финансовые операции',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LiveTape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_win', models.IntegerField(verbose_name='Сумма выигрыша')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.userprofile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайв лента',
                'verbose_name_plural': 'Лайв лента',
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_win', models.IntegerField(default=0, verbose_name='Сумма выигрыша')),
                ('quantity_cells_available', models.IntegerField(verbose_name='Количество доступных ячеек')),
                ('cells', models.TextField(verbose_name='Ячейки')),
                ('unopened_cells', models.TextField(verbose_name='Не открытые ячейки')),
                ('weight', models.TextField(verbose_name='Веса')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='case.case', verbose_name='Кейс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.userprofile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Игровая сессия',
                'verbose_name_plural': 'Игровые сессии',
            },
        ),
        migrations.RunSQL("""
            INSERT INTO
                "service_statistic" ("id", "name", "value")
            VALUES
                ('1', 'games', '0');
        """),

        migrations.RunSQL("""
            INSERT INTO
                "service_prizeweight" ("id", "name", "weights")
            VALUES
                ('1', 'Admin', '[10, 5, 5, 3, 3, 2, 2, 1, 1, 1, 1, 1]'),
                ('2', 'User', '[1, 1, 1, 1, 1, 2, 2, 3, 3, 5, 5, 10]');
        """),
        migrations.RunSQL("""
            INSERT INTO
                "service_levellist" ("id", "level", "experience", "reward", "additional_description")
            VALUES
                ('1', '1', '0', '1000', 'no_description'),
                ('2', '2', '500', '100', 'no_description'),
                ('3', '3', '1000', '200', 'Доступ к кейсу "Взрыв"'),
                ('4', '4', '1500', '300', 'no_description'),
                ('5', '5', '2000', '400', 'Доступ к кейсу "Ядерный удар"'),
                ('6', '6', '2500', '500', 'no_description'),
                ('7', '7', '3000', '600', 'no_description'),
                ('8', '8', '3500', '700', 'no_description'),
                ('9', '9', '4000', '800', 'Доступ к кейсу "C4"'),
                ('10', '10', '4500', '900', 'no_description'),
                ('11', '11', '5000', '1000', 'no_description'),
                ('12', '12', '8000', '5000', 'no_description');
        """),
        migrations.RunSQL("""
            INSERT INTO
                "case_case" ("id", "name", "image", "image_cell", "description", "cost", "level", "experience", "prizes")
            VALUES
                ('1', 'Мина',         'cases/1.png', 'cells/1.png', 'Кейс "Мина"',         '100',  '1', '100', '[5, 5, 10, 10, 20, 50, 50, 50, 100, 100, 500, 0]'),
                ('2', 'Бомба',        'cases/2.png', 'cells/2.png', 'Кейс "Бомба"',        '200',  '1', '200', '[10, 50, 50, 100, 200, 300, 400, 500, 800, 0, 0, 0]'),
                ('3', 'Динамит',      'cases/3.png', 'cells/3.png', 'Кейс "Динамит"',      '350',  '1', '300', '[70, 250, 300, 700, 1000, 1000, 2000, 3000, 0, 0, 0, 0]'),
                ('4', 'Взрыв',        'cases/4.png', 'cells/4.png', 'Кейс "Взрыв"',        '500',  '3', '400', '[150, 250, 400, 800, 1000, 5000, 7000, 0, 0, 0, 0, 0]'),
                ('5', 'Ядерный удар', 'cases/5.png', 'cells/5.png', 'Кейс "Ядерный удар"', '1000', '5', '500', '[1000, 2000, 3000, 5000, 10000, 0, 0, 0, 0, 0, 0, 0]'),
                ('6', 'C4',           'cases/6.png', 'cells/6.png', 'Кейс "C4"',           '100',  '9', '700', '[30000, 50000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]');
        """),
    ]
